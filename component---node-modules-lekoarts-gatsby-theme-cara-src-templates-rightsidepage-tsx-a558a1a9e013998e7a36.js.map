{"version":3,"sources":["webpack:///./src/@lekoarts/gatsby-theme-cara/sections/rightside.mdx","webpack:///./node_modules/@lekoarts/gatsby-theme-cara/src/components/rightside.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-cara/src/templates/rightsidepage.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-cara/src/components/header.tsx"],"names":["name","ProjectCard","props","console","warn","layoutProps","_frontmatter","MDXContent","components","mdxType","title","link","bg","isMDXComponent","RightSide","offset","factor","sx","clipPath","speed","display","gridGap","gridTemplateColumns","h2","gridColumn","icon","width","color","left","top","stroke","hiddenMobile","RightSidePage","pages","Header","useColorMode","as","variant","fontWeight","mx","mb","onClick","navigate","type","aria-label"],"mappings":"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","file":"component---node-modules-lekoarts-gatsby-theme-cara-src-templates-rightsidepage-tsx-a558a1a9e013998e7a36.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst ProjectCard = makeShortcode(\"ProjectCard\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2>{`From the Rightside`}</h2>\n    <ProjectCard title=\"treesick9\" link=\"https://www.youtube.com/channel/UCZztZMwhUgJRGDnJDcYtu-g\" bg=\"linear-gradient(to right, #D4145A 0%, #FBB03B 100%)\" mdxType=\"ProjectCard\">\n  tree_sick_9 is a youtube channel where I posted 9 videos.They were abstract videos.\n    </ProjectCard>\n    <ProjectCard title=\"Poems\" link=\"http://arpan.work\" bg=\"linear-gradient(to right, #662D8C 0%, #ED1E79 100%)\" mdxType=\"ProjectCard\">\n Do you know you \nYes you a mere concept of my mind using which I make stories about you\n    </ProjectCard>\n    <ProjectCard title=\"Thoughts\" link=\"http://arpan.work\" bg=\"linear-gradient(to right, #009245 0%, #FCEE21 100%)\" mdxType=\"ProjectCard\">\nThere is always a delight in thinking that we will wake up in new body eventually but what if this is the last consciousness you are ever gonna have\n    </ProjectCard>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport Divider from \"../elements/divider\"\nimport Inner from \"../elements/inner\"\nimport Content from \"../elements/content\"\nimport SVG from \"./svg\"\nimport { UpDown, UpDownWide } from \"../styles/animations\"\n// @ts-ignore\nimport RightSideMDX from \"../sections/rightside\"\nimport Header from \"./header\"\n\nconst RightSide = ({ offset, factor = 2 }: { offset: number; factor?: number }) => (\n  <div>\n    <Header/>\n    <Divider\n      bg=\"linear-gradient(to right, #D585FF 0%, #00FFEE 100%)\"\n      sx={{ clipPath: `polygon(0 15%, 100% 25%, 100% 85%, 0 75%)` }}\n      speed={-0.2}\n      offset={0}\n      factor={factor}\n    />\n    <Content speed={0.4} offset={offset + 0.2} factor={factor}>\n      <Inner>\n        <div\n          sx = {{\n            display: `grid`,\n            gridGap: [4, 4, 4, 5],\n            gridTemplateColumns: [`1fr`, `1fr`, `repeat(2, 1fr)`],\n            h2: { gridColumn: `-1/1` },\n          }}\n        >\n          \n          <RightSideMDX />\n        </div>\n      </Inner>\n    </Content>\n    <Divider speed={0.1} offset={offset} factor={factor}>\n      <UpDown>\n        <SVG icon=\"box\" width={6} color=\"icon_brightest\" left=\"85%\" top=\"75%\" />\n        <SVG icon=\"upDown\" width={8} color=\"icon_teal\" left=\"70%\" top=\"20%\" />\n        <SVG icon=\"triangle\" width={8} stroke color=\"icon_orange\" left=\"25%\" top=\"5%\" />\n        <SVG icon=\"circle\" hiddenMobile width={24} color=\"icon_brightest\" left=\"17%\" top=\"60%\" />\n      </UpDown>\n      <UpDownWide>\n        <SVG icon=\"arrowUp\" hiddenMobile width={16} color=\"icon_green\" left=\"20%\" top=\"90%\" />\n        <SVG icon=\"triangle\" width={12} stroke color=\"icon_brightest\" left=\"90%\" top=\"30%\" />\n        <SVG icon=\"circle\" width={16} color=\"icon_yellow\" left=\"70%\" top=\"90%\" />\n        <SVG icon=\"triangle\" hiddenMobile width={16} stroke color=\"icon_teal\" left=\"18%\" top=\"75%\" />\n        <SVG icon=\"circle\" width={6} color=\"icon_brightest\" left=\"75%\" top=\"10%\" />\n        <SVG icon=\"upDown\" hiddenMobile width={8} color=\"icon_green\" left=\"45%\" top=\"10%\" />\n      </UpDownWide>\n      <SVG icon=\"circle\" hiddenMobile width={6} color=\"icon_brightest\" left=\"4%\" top=\"20%\" />\n      <SVG icon=\"circle\" width={12} color=\"icon_pink\" left=\"80%\" top=\"60%\" />\n      <SVG icon=\"box\" width={6} color=\"icon_orange\" left=\"10%\" top=\"10%\" />\n      <SVG icon=\"github\" width={12} color=\"icon_yellow\" left=\"29%\" top=\"26%\" />\n      <SVG icon=\"hexa\" width={16} stroke color=\"icon_red\" left=\"75%\" top=\"30%\" />\n      <SVG icon=\"hexa\" width={8} stroke color=\"icon_yellow\" left=\"80%\" top=\"70%\" />\n    </Divider>\n  </div>\n)\n\nexport default RightSide\n","import React from \"react\"\nimport { Parallax } from \"react-spring/renderprops-addons.cjs\"\nimport Layout from \"../components/layout\"\nimport Contact from \"../components/contact\"\nimport RightSide from \"../components/rightside\"\n\nconst RightSidePage = () => (\n  <Layout>\n    <Parallax pages={3}>\n      <RightSide offset={0}/>\n      <Contact offset={2} factor={1} />\n    </Parallax>\n  </Layout>\n)\n\nexport default RightSidePage\n","/** @jsx jsx */\nimport { Box, Flex, Link, useColorMode, jsx } from \"theme-ui\"\nimport { navigate } from \"gatsby\"\n\nconst Header = () => {\n  const [colorMode, setColorMode] = useColorMode()\n  const isDark = colorMode === `dark`\n  \n\n  return (\n        <Box as=\"header\" variant=\"header\">\n          <button\n            sx={{ variant: `buttons.toggle`, fontWeight: `semibold`, display: `block`, mx: `auto`, mb: 3 }}\n            onClick={() => navigate(\"/\")}\n            type=\"button\"\n            aria-label=\"arpan.work\"\n          >\n            arpan.work\n          </button>\n        </Box>\n  )\n}\n\nexport default Header\n"],"sourceRoot":""}