{"version":3,"sources":["webpack:///./src/@lekoarts/gatsby-theme-cara/sections/game.mdx","webpack:///./node_modules/@lekoarts/gatsby-theme-cara/src/components/game.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-cara/src/templates/gamepage.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-cara/src/components/header.tsx"],"names":["name","ProjectCard","props","console","warn","layoutProps","_frontmatter","MDXContent","components","mdxType","title","link","bg","isMDXComponent","Game","offset","factor","sx","clipPath","speed","display","gridGap","gridTemplateColumns","h2","gridColumn","icon","width","color","left","top","stroke","hiddenMobile","GamePage","pages","Header","useColorMode","as","variant","fontWeight","mx","mb","onClick","navigate","type","aria-label"],"mappings":"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","file":"component---node-modules-lekoarts-gatsby-theme-cara-src-templates-gamepage-tsx-9cd61dc9b960bbf90f9c.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst ProjectCard = makeShortcode(\"ProjectCard\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2>{`Games`}</h2>\n    <ProjectCard title=\"Sect\" link=\"/sect/\" bg=\"linear-gradient(to right, #D4145A 0%, #FBB03B 100%)\" mdxType=\"ProjectCard\">\n3d shapes and view, You solve the puzzle by arranging shapes into result shape.\nCatch:\nWhen shape intersects, the intersecting part changes into alternate colour.\n(two colours: black and white) it creates beautiful illusions with shapes.\n    </ProjectCard>\n    <ProjectCard title=\"Evolution 0\" link=\"/evol/\" bg=\"linear-gradient(to right, #662D8C 0%, #ED1E79 100%)\" mdxType=\"ProjectCard\">\n A species which can be then developed as homo sapiens . His first creation of this species begin as fundamental level of living. So here I represent this world creation game series which starts as Evolution 0 : living. Join this journey to know how we developed in this new visionary way.\n    </ProjectCard>\n    <ProjectCard title=\"Look Switch\" link=\"/look/\" bg=\"linear-gradient(to right, #009245 0%, #FCEE21 100%)\" mdxType=\"ProjectCard\">\nBlack sees White's world and White sees Black's world.Both ache for fake garden\n    </ProjectCard>\n    <ProjectCard title=\"Interective Demonstration\" link=\"/intd/\" bg=\"linear-gradient(to right, #D585FF 0%, #00FFEE 100%)\" mdxType=\"ProjectCard\">\nAn interactive demo of how toilets are made using pick and place gameplay.It was a freelancing work.\n    </ProjectCard>\n    <ProjectCard title=\"Abscond\" link=\"/absc/\" bg=\"linear-gradient(to right, #D4145A 0%, #FBB03B 100%)\" mdxType=\"ProjectCard\">\nAbscond was third person controller zombie killing game with 4 levels.It was a collage project.\n    </ProjectCard>\n    <ProjectCard title=\"Stealth Hunt\" link=\"/stea/\" bg=\"linear-gradient(to right, #662D8C 0%, #ED1E79 100%)\" mdxType=\"ProjectCard\">\nStealthhunt was a multiplayer game with 3 different levels.Levels: mirror maze,invisible maze and mirror and cctv maze\n    </ProjectCard>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport Divider from \"../elements/divider\"\nimport Inner from \"../elements/inner\"\nimport Content from \"../elements/content\"\nimport SVG from \"./svg\"\nimport { UpDown, UpDownWide } from \"../styles/animations\"\n// @ts-ignore\nimport GamesMDX from \"../sections/game\"\nimport Header from \"./header\"\n\nconst Game = ({ offset, factor = 2 }: { offset: number; factor?: number }) => (\n  <div>\n    <Header/>\n    <Divider\n      bg=\"linear-gradient(to right, #662D8C 0%, #ED1E79 100%)\"\n      sx={{ clipPath: `polygon(0 15%, 100% 25%, 100% 85%, 0 75%)` }}\n      speed={-0.2}\n      offset={0}\n      factor={factor}\n    />\n    <Content speed={0.4} offset={offset + 0.2} factor={factor}>\n      <Inner>\n        <div\n          sx = {{\n            display: `grid`,\n            gridGap: [4, 4, 4, 5],\n            gridTemplateColumns: [`1fr`, `1fr`, `repeat(2, 1fr)`],\n            h2: { gridColumn: `-1/1` },\n          }}\n        >\n          <GamesMDX />\n        </div>\n      </Inner>\n    </Content>\n    <Divider speed={0.1} offset={offset} factor={factor}>\n      <UpDown>\n        <SVG icon=\"box\" width={6} color=\"icon_brightest\" left=\"85%\" top=\"75%\" />\n        <SVG icon=\"unity\" width={8} stroke color=\"icon_teal\" left=\"70%\" top=\"20%\" />\n        <SVG icon=\"triangle\" width={8} stroke color=\"icon_orange\" left=\"25%\" top=\"5%\" />\n        <SVG icon=\"circle\" hiddenMobile width={24} color=\"icon_brightest\" left=\"17%\" top=\"60%\" />\n      </UpDown>\n      <UpDownWide>\n        <SVG icon=\"arrowUp\" hiddenMobile width={16} color=\"icon_green\" left=\"20%\" top=\"90%\" />\n        <SVG icon=\"triangle\" width={12} stroke color=\"icon_brightest\" left=\"90%\" top=\"30%\" />\n        <SVG icon=\"circle\" width={16} color=\"icon_yellow\" left=\"70%\" top=\"90%\" />\n        <SVG icon=\"triangle\" hiddenMobile width={16} stroke color=\"icon_teal\" left=\"18%\" top=\"75%\" />\n        <SVG icon=\"circle\" width={6} color=\"icon_brightest\" left=\"75%\" top=\"10%\" />\n        <SVG icon=\"unity\" hiddenMobile width={8} stroke color=\"icon_green\" left=\"45%\" top=\"10%\" />\n      </UpDownWide>\n      <SVG icon=\"circle\" hiddenMobile width={6} color=\"icon_brightest\" left=\"4%\" top=\"20%\" />\n      <SVG icon=\"circle\" width={12} color=\"icon_pink\" left=\"80%\" top=\"60%\" />\n      <SVG icon=\"box\" width={6} color=\"icon_orange\" left=\"10%\" top=\"10%\" />\n      <SVG icon=\"github\" width={12} stroke color=\"icon_yellow\" left=\"29%\" top=\"26%\" />\n      <SVG icon=\"hexa\" width={16} stroke color=\"icon_red\" left=\"75%\" top=\"30%\" />\n      <SVG icon=\"hexa\" width={8} stroke color=\"icon_yellow\" left=\"80%\" top=\"70%\" />\n    </Divider>\n  </div>\n)\n\nexport default Game\n","import React from \"react\"\nimport { Parallax } from \"react-spring/renderprops-addons.cjs\"\nimport Layout from \"../components/layout\"\nimport Contact from \"../components/contact\"\nimport Game from \"../components/game\"\n\nconst GamePage = () => (\n  <Layout>\n    <Parallax pages={3}>\n      <Game offset={0}/>\n      <Contact offset={2} factor={1} />\n    </Parallax>\n  </Layout>\n)\n\nexport default GamePage\n","/** @jsx jsx */\nimport { Box, Flex, Link, useColorMode, jsx } from \"theme-ui\"\nimport { navigate } from \"gatsby\"\n\nconst Header = () => {\n  const [colorMode, setColorMode] = useColorMode()\n  const isDark = colorMode === `dark`\n  \n\n  return (\n        <Box as=\"header\" variant=\"header\">\n          <button\n            sx={{ variant: `buttons.toggle`, fontWeight: `semibold`, display: `block`, mx: `auto`, mb: 3 }}\n            onClick={() => navigate(\"/\")}\n            type=\"button\"\n            aria-label=\"arpan.work\"\n          >\n            arpan.work\n          </button>\n        </Box>\n  )\n}\n\nexport default Header\n"],"sourceRoot":""}